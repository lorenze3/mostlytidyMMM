% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_saturation.R
\name{step_saturation}
\alias{step_saturation}
\title{function to add saturation trasnformations to a recipe}
\usage{
step_saturation(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  options = list(names = TRUE),
  skip = FALSE,
  asymptote = 100,
  saturation_speed = 0.05,
  hills = NULL,
  id = rand_id("saturation")
)
}
\arguments{
\item{recipe}{a recipes::recipe}

\item{...}{variables in recipe to be effected by the step}

\item{role}{defaults to NA, set to a string to change the role of the transformed variables}

\item{asymptote}{defaults to 100, the asymptotic value of the saturation transformed variable}

\item{saturation_speed}{defaults to .05, controls how quickly the asymptote is approached}

\item{id}{default value will work most often, but can be set manually for use with tuning fuctions}
}
\value{
a recipe with the new saturation step appended
}
\description{
function to add saturation trasnformations to a recipe
}
\examples{
#not run!
library(tidyverse)
library(recipes)
library(tune)
library(dials)
library(mostlytidyMMM)

#create two datasets
mktdata<-rbind(tibble(prod='brand',store='store1',
                      sales=c(100,100,100,100,100),tv=c(10,100,0,0,100),
                      search=c(0,10,20,50,50)) ,
               tibble(prod='brand',store='store2',
                      sales=c(10,10,10,10,10),tv=c(0,0,0,0,0),
                      search=c(0,2,2,0,0) ) ) |> 
  group_by(prod,store)

mktdata2<-tibble(prod='brand',store='all',
                 sales=100,tv=1000,search=1000) |> group_by(prod,store)

#creating a recipe with a saturaiton step in it
rec_obj <-
 recipe(sales ~ ., data = mktdata) |>
 step_saturation(c(tv,search),asymptote=200,saturation_speed=.003 ) |>
 prep(training = mktdata)

#showing what a tunable recipe looks liek:
rec_obj2<-  recipe(sales ~ ., data = mktdata) |>
  step_saturation(c(tv,search),asymptote=tune(),saturation_speed=tune() )

extract_parameter_set_dials(rec_obj2)

 #custom print shows values of saturation hyperparameters:
 print(rec_obj)
 #or shows that they are set to be tuned:
 print(rec_obj2)
 #producing the transformed dataset:
 bake(rec_obj,mktdata)

}
